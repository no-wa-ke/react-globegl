{"version":3,"sources":["common/Page/Html.js","common/Loading/Loading.js","common/Page/Blog.js","common/Page/InsetDividers.js","common/Page/SecondPage.js","common/Page/Count.js","common/Page/World/Earth.js","App.js","index.js"],"names":["Html","React","Component","render","className","Helmet","charSet","rel","href","Loading","type","color","height","width","timeout","Blog","makeStyles","theme","root","position","maxWidth","top","left","transform","backgroundColor","palette","background","dark","SecondPage","Count","constructor","props","super","this","state","data","componentDidMount","els","document","querySelector","querySelectorAll","innerHTML","els2","console","info","warn","setState","timezz","date","canContinue","update","event","data-days","data-hours","data-minutes","class","data-seconds","arcsData","Array","keys","map","startLat","Math","random","startLng","endLat","endLng","round","World","globeImageUrl","arcColor","arcDashLength","arcDashGap","arcDashAnimateTime","Lazy","lazy","Promise","resolve","setTimeout","default","App","fallback","getElementById","ReactDOM"],"mappings":"gPAIA,MAAMA,UAAaC,IAAMC,UACjBC,SACQ,OACI,yBAAKC,UAAU,eACX,kBAACC,EAAA,EAAD,KACI,0BAAMC,QAAQ,UACd,kDACA,0BAAMC,IAAI,OAAOC,KAAK,wBAOlCR,Q,6BCID,MAAMS,UAAgBR,IAAMC,UAEzCC,SACE,OAEA,yBAAKC,UAAU,qBACb,kBAAC,IAAD,CACEM,KAAK,OACLC,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,Q,MCFIC,I,oECfHC,aAAYC,IAAD,CAC3BC,KAAM,CACJL,MAAO,MACPM,SAAU,WACVC,SAAU,IACVC,IAAK,MACLC,KAAM,MACNC,UAAW,oCACXC,gBAAiBP,EAAMQ,QAAQC,WAAWC,KAC1ChB,MAAO,e,MCfIiB,I,iBCPf,MAAMC,UAAc3B,YAGlB4B,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,CACXC,KAAM,CAAC,IAAK,IAAK,MAGrBC,oBACE,IAAIC,EAAMC,SAASC,cAAc,WAAWC,iBAAiB,YAAYC,UACrEC,EAAOJ,SAASE,iBAAiB,YACrCG,QAAQC,KAAK,8CACbD,QAAQC,KAAKP,GACbM,QAAQE,KAAKH,GAEbT,KAAKa,SAAS,CACZX,KAAM,CAAC,IAAK,IAAK,IAAK,OAM1BhC,SAYE,OAVA4C,IAAO,UAAW,CAChBC,KAAM,yBACNC,aAAa,EACbC,OAAOC,OASL,yBAAK/C,UAAU,UAAf,oBAEE,8BAFF,OAIE,yBAAKgD,aAAA,IAJP,QAME,yBAAKC,cAAA,IANP,UAQE,yBAAKC,gBAAA,IACL,0BAAMC,MAAM,WAAZ,WACA,yBAAKC,gBAAA,MAUA3B,QCvDf,MACM4B,EAAW,IAAIC,MADX,IACoBC,QAAQC,KAAI,MACtCC,SAAkC,KAAvBC,KAAKC,SAAW,IAC3BC,SAAkC,KAAvBF,KAAKC,SAAW,IAC3BE,OAAgC,KAAvBH,KAAKC,SAAW,IACzBG,OAAgC,KAAvBJ,KAAKC,SAAW,IACzBpD,MAAO,CACH,CAAC,MAAO,MAAO,MAAO,OAAOmD,KAAKK,MAAsB,EAAhBL,KAAKC,WAC7C,CAAC,MAAO,MAAO,MAAO,OAAOD,KAAKK,MAAsB,EAAhBL,KAAKC,gBAKxCK,EAAQ,IAGP,kBACN,IADM,CAENC,cAAc,sDACdZ,SAAUA,EACVa,SAAU,QACVC,cAAe,IAAMT,KAAKC,SAC1BS,WAAY,IAAMV,KAAKC,SACvBU,mBAAoB,IAAsB,IAAhBX,KAAKC,SAAmB,K,MCN1D,MAAMW,EAAOC,gBAAK,IAAM,IAAIC,SAAQC,IAGpBC,YAAW,KACPD,EAAQ,CACJE,QAAS,IAAM,oCAChB,WAGvB,MAAMC,UAAY9E,YAGdC,SAGI,OAEI,oCACA,kBAAC,EAAD,MACA,kBAAC,WAAD,CAAU8E,SAAa,kBAAC,EAAD,OACf,kBAACP,EAAD,MAEA,kBAACN,EAAD,MACR,yBAAKhE,UAAY,OAGb,kBAAC,EAAD,UAcD4E,QCjDI,IAAItB,MADb,IACsBC,QAAQC,KAAI,MACxCC,SAAkC,KAAvBC,KAAKC,SAAW,IAC3BC,SAAkC,KAAvBF,KAAKC,SAAW,IAC3BE,OAAgC,KAAvBH,KAAKC,SAAW,IACzBG,OAAgC,KAAvBJ,KAAKC,SAAW,IACzBpD,MAAO,CAAC,CAAC,MAAO,QAAS,OAAQ,SAASmD,KAAKK,MAAsB,EAAhBL,KAAKC,WAAgB,CAAC,MAAO,QAAS,OAAQ,SAASD,KAAKK,MAAsB,EAAhBL,KAAKC,gBAI5GzB,SAAS4C,eAAe,QAQ5CC,IAAShF,OACL,kBAAC,EAAD,MAEAmC,SAAS4C,eAAe,W","file":"static/js/main.5067538e.chunk.js","sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\n\n\nclass Html extends React.Component {\n        render () {\n                return (\n                    <div className=\"application\">\n                        <Helmet>\n                            <meta charSet=\"utf-8\" />\n                            <title>K I D O Y O J I</title>\n                            <link rel=\"icon\" href=\"icon/favicon.ico\" ></link>\n                        </Helmet>\n                    </div>\n                );\n              }\n};\n\n export default Html;\n\n\n","import React from 'react';\n\nimport Loader from \"react-loader-spinner\";\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport './styles.scss';\n\n\n// const { lazy, Suspense } = React;\n\n// // // const Lazy = lazy(() => new Promise(resolve => {\n// // //   setTimeout(() => {\n// // //     resolve({ default: () => <Resource /> });\n// // //   }, 4000);\n// // // }));\n\n// // const Lazy = lazy(() => new Promise(resolve => {\n// // // Do whatever you want, fetch, import, calc, just call resolve\n// // // with an object that has a \"default\" Component\n// // setTimeout(() => { resolve({default: () => < b > </b> });\n// // }, 2500);}));\n\nexport default class Loading extends React.Component {\n  //other logic\n  render() {\n    return (\n\n    <div className=\"Loading-container\">\n      <Loader\n        type=\"Puff\"\n        color=\"#FFFFFF\"\n        height={100}\n        width={100}\n        timeout={5000} //3 secs\n      />\n    </div>\n\n    \n    );\n  }\n}","\nimport React from 'react';\nimport {\n        FacebookShareButton,\n        FacebookIcon,\n        TwitterShareButton,\n        TwitterIcon,\n      } from 'next-share'\n      \n\n    \n\n\nconst Blog = () => {\n        return (\n\n\n        <FacebookShareButton\n                url={'https://github.com/next-share'}\n                quote={'next-share is a social share buttons plugin for React apps.'}\n                hashtag={'#nextshare'}\n        >\n        <FacebookIcon  size={32} round />\n        </FacebookShareButton>\n\n\n\n\n\n        );\n      };\n      export default Blog;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\nimport Code from '@material-ui/icons/Code';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport WorkIcon from '@material-ui/icons/Work';\n\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"50%\",\n    position: 'absolute',\n    maxWidth: 360,\n    top: \"50%\",\n    left: \"25%\",\n    transform: \"translateY(-50%) translateX(-50%)\",\n    backgroundColor: theme.palette.background.dark,\n    color: \"#ffffff\"\n  },\n}));\n\nexport default function InsetDividers() {\n  const classes = useStyles();\n\n  return (\n    <List className={classes.root}>\n      \n      \n      <ListItem >\n        <ListItemAvatar>\n          <Avatar>\n            <ImageIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary=\"Blog\" className=\"line\" />\n      </ListItem>\n      \n      \n      \n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <WorkIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary=\"Work\" className=\"line\" />\n      </ListItem>\n  \n      \n      \n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <InstagramIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary=\"Instagram\" className=\"line\"  />\n      </ListItem>\n    \n    \n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <YouTubeIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary=\"Youtube\" className=\"line\"  />\n      </ListItem>\n    \n    </List>\n  );\n}\n// export default Dividers;\n","import React from \"react\";\nimport './styles.scss';\n\nconst SecondPage = () => {\n  return (\n    <a href=\"#!\" class=\"\">\n      <i class=\"\"></i>\n    </a>\n  );\n};\nexport default SecondPage;","import React, { Component } from 'react';\nimport timezz from \"timezz\";\n\nclass Count extends Component {\n\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\"a\", \"a\", \"a\"]\n    };\n  }\n  componentDidMount() {\n    let els = document.querySelector(\".timer1\").querySelectorAll(\".seconds\").innerHTML;\n    let els2 = document.querySelectorAll(\".seconds\");\n    console.info(\"-------------beforeUpdateState------------\");\n    console.info(els);\n    console.warn(els2);\n\n    this.setState({\n      data: [\"a\", \"b\", \"c\", \"d\"]\n    });\n\n    els\n\n  }\n  render() {\n\n    timezz(\".timer1\", {\n      date: \"July 16, 2017 00:00:00\",\n      canContinue: true,\n      update(event) {\n        // els[0]= event.seconds === 1 ? \"second\" : \"seconds\";\n        // document.querySelector(\".timer1\").querySelector(\".seconds\").innerHTML =\n        // event.seconds === 1 ? \"second\" : \"seconds\";\n      }\n    });\n\n    return (\n       \n        <div className=\"timer1\">\n          Stroke 2017.06.17\n          <div></div>\n          Days\n          <div data-days></div>\n          Hours\n          <div data-hours></div>\n          Minutes\n          <div data-minutes></div>\n          <span class=\"seconds\">Seconds</span>\n          <div data-seconds></div>\n        </div>\n    \n    );\n  }\n}\n\n\n\n\nexport default Count;","import React, { useState, useEffect, useRef } from \"react\";\n\nimport Globe from \"react-globe.gl\";\n\n\nconst N = 20;\nconst arcsData = [...Array(N).keys()].map(() => ({\n    startLat: (Math.random() - 0.5) * 180,\n    startLng: (Math.random() - 0.5) * 360,\n    endLat: (Math.random() - 0.5) * 180,\n    endLng: (Math.random() - 0.5) * 180,\n    color: [\n        ['red', 'red', 'red', 'red'][Math.round(Math.random() * 3)],\n        ['red', 'red', 'red', 'red'][Math.round(Math.random() * 1)]\n    ]\n}));\n\n\nexport const World = () => {\n\n\n    return (  <\n        Globe\n        globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-night.jpg\"\n        arcsData={arcsData}\n        arcColor={'color'}\n        arcDashLength={() => Math.random()}\n        arcDashGap={() => Math.random()}\n        arcDashAnimateTime={() => Math.random() * 40000 + 50}\n        />\n    );\n};","import React, { useEffect, Suspense, Component, lazy } from 'react';\n\n\nimport Html from \"./common/Page/Html.js\"\nimport Loading from \"./common/Loading/Loading.js\";\n\n// import Contentful  from \"./common/Page/Contentful/Contentful.js\"\n\n\n\n\nimport Blog from \"./common/Page/Blog.js\"\nimport Dividers from \"./common/Page/InsetDividers.js\"\nimport SecondPage from \"./common/Page/SecondPage.js\"\nimport Count from \"./common/Page/Count.js\"\nimport {World} from \"./common/Page/World/Earth.js\"\n\n\n\nimport './App.scss';\n\n\nconst Lazy = lazy(() => new Promise(resolve => {\n                // Do whatever you want, fetch, import, calc, just call resolve\n                // with an object that has a \"default\" Component\n                setTimeout(() => {\n                    resolve({\n                        default: () => <b> </b>});\n                    }, 2500);\n                }));\n\nclass App extends Component {\n\n\n    render() {\n        // const store = configureStore();\n                \n        return ( \n        \n            <>\n            <Html/>\n            <Suspense fallback = { <Loading/> } >\n                    <Lazy / >\n                    {/* <Viewer/> */}\n                    <World/>\n            <div className = \"App\" >\n                {/* <Blog/> */}\n\n                <Count/>\n                {/* <Dividers /> */}\n                {/* <SecondPage/> */}\n                {/* <Contentful/> */}\n            </div>\n            </Suspense>\n\n            </>\n            \n        )\n    }\n}\n\n\nexport default App;","\n\nimport React  ,{ useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\n\nimport Globe from \"react-globe.gl\";\n\nimport App from \"./App\";\n\n\nconst N = 20;\n  const arcsData = [...Array(N).keys()].map(() => ({\n    startLat: (Math.random() - 0.1) * 180,\n    startLng: (Math.random() - 0.1) * 360,\n    endLat: (Math.random() - 0.1) * 180,\n    endLng: (Math.random() - 0.1) * 180,\n    color: [['red', 'white', 'blue', 'green'][Math.round(Math.random() * 3)], ['red', 'white', 'blue', 'green'][Math.round(Math.random() * 1)]]\n  }));\n\n\nconst rootElement = document.getElementById(\"root\");\n\nconst routes = (\n    <App/>\n\n  );\n\n\nReactDOM.render(\n    <App/>,\n\n    document.getElementById(\"root\")\n    );\n\n\n"],"sourceRoot":""}